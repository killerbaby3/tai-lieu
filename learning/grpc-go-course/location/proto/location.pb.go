// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: location/proto/location.proto

package location

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LocationDetail struct {
	LocationId           int32    `protobuf:"varint,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty" bson:"_id",omitempty`
	LocationName         string   `protobuf:"bytes,2,opt,name=location_name,json=locationName,proto3" json:"location_name,omitempty" bson:"original_name",omitempty`
	ParentID             int32    `protobuf:"varint,3,opt,name=ParentID,proto3" json:"parent_id,omitempty" bson:"parent_id",omitempty`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocationDetail) Reset()         { *m = LocationDetail{} }
func (m *LocationDetail) String() string { return proto.CompactTextString(m) }
func (*LocationDetail) ProtoMessage()    {}
func (*LocationDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c73d5d1a59fe368, []int{0}
}
func (m *LocationDetail) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LocationDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LocationDetail.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LocationDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocationDetail.Merge(m, src)
}
func (m *LocationDetail) XXX_Size() int {
	return m.Size()
}
func (m *LocationDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_LocationDetail.DiscardUnknown(m)
}

var xxx_messageInfo_LocationDetail proto.InternalMessageInfo

func (m *LocationDetail) GetLocationId() int32 {
	if m != nil {
		return m.LocationId
	}
	return 0
}

func (m *LocationDetail) GetLocationName() string {
	if m != nil {
		return m.LocationName
	}
	return ""
}

func (m *LocationDetail) GetParentID() int32 {
	if m != nil {
		return m.ParentID
	}
	return 0
}

type ListLocation struct {
	ListLocation         []*LocationDetail `protobuf:"bytes,1,rep,name=ListLocation,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListLocation) Reset()         { *m = ListLocation{} }
func (m *ListLocation) String() string { return proto.CompactTextString(m) }
func (*ListLocation) ProtoMessage()    {}
func (*ListLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c73d5d1a59fe368, []int{1}
}
func (m *ListLocation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListLocation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLocation.Merge(m, src)
}
func (m *ListLocation) XXX_Size() int {
	return m.Size()
}
func (m *ListLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLocation.DiscardUnknown(m)
}

var xxx_messageInfo_ListLocation proto.InternalMessageInfo

func (m *ListLocation) GetListLocation() []*LocationDetail {
	if m != nil {
		return m.ListLocation
	}
	return nil
}

type LocationByParent struct {
	LocationMap          map[int32]*ListLocation `protobuf:"bytes,1,rep,name=LocationMap,proto3" json:"LocationMap,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *LocationByParent) Reset()         { *m = LocationByParent{} }
func (m *LocationByParent) String() string { return proto.CompactTextString(m) }
func (*LocationByParent) ProtoMessage()    {}
func (*LocationByParent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c73d5d1a59fe368, []int{2}
}
func (m *LocationByParent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LocationByParent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LocationByParent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LocationByParent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocationByParent.Merge(m, src)
}
func (m *LocationByParent) XXX_Size() int {
	return m.Size()
}
func (m *LocationByParent) XXX_DiscardUnknown() {
	xxx_messageInfo_LocationByParent.DiscardUnknown(m)
}

var xxx_messageInfo_LocationByParent proto.InternalMessageInfo

func (m *LocationByParent) GetLocationMap() map[int32]*ListLocation {
	if m != nil {
		return m.LocationMap
	}
	return nil
}

type GetByParentIdRequest struct {
	ParentIDs            []int32  `protobuf:"varint,1,rep,packed,name=ParentIDs,proto3" json:"ParentIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByParentIdRequest) Reset()         { *m = GetByParentIdRequest{} }
func (m *GetByParentIdRequest) String() string { return proto.CompactTextString(m) }
func (*GetByParentIdRequest) ProtoMessage()    {}
func (*GetByParentIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c73d5d1a59fe368, []int{3}
}
func (m *GetByParentIdRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetByParentIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetByParentIdRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetByParentIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByParentIdRequest.Merge(m, src)
}
func (m *GetByParentIdRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetByParentIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByParentIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByParentIdRequest proto.InternalMessageInfo

func (m *GetByParentIdRequest) GetParentIDs() []int32 {
	if m != nil {
		return m.ParentIDs
	}
	return nil
}

type GetByParentIdResponse struct {
	Data                 *LocationByParent `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetByParentIdResponse) Reset()         { *m = GetByParentIdResponse{} }
func (m *GetByParentIdResponse) String() string { return proto.CompactTextString(m) }
func (*GetByParentIdResponse) ProtoMessage()    {}
func (*GetByParentIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c73d5d1a59fe368, []int{4}
}
func (m *GetByParentIdResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetByParentIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetByParentIdResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetByParentIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByParentIdResponse.Merge(m, src)
}
func (m *GetByParentIdResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetByParentIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByParentIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetByParentIdResponse proto.InternalMessageInfo

func (m *GetByParentIdResponse) GetData() *LocationByParent {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*LocationDetail)(nil), "location.LocationDetail")
	proto.RegisterType((*ListLocation)(nil), "location.ListLocation")
	proto.RegisterType((*LocationByParent)(nil), "location.LocationByParent")
	proto.RegisterMapType((map[int32]*ListLocation)(nil), "location.LocationByParent.LocationMapEntry")
	proto.RegisterType((*GetByParentIdRequest)(nil), "location.GetByParentIdRequest")
	proto.RegisterType((*GetByParentIdResponse)(nil), "location.GetByParentIdResponse")
}

func init() { proto.RegisterFile("location/proto/location.proto", fileDescriptor_7c73d5d1a59fe368) }

var fileDescriptor_7c73d5d1a59fe368 = []byte{
	// 461 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x53, 0xcf, 0x6e, 0xd3, 0x30,
	0x18, 0xc7, 0x2d, 0x45, 0xdb, 0x97, 0x6d, 0x54, 0x66, 0x83, 0x28, 0x82, 0xa4, 0xca, 0xa9, 0x12,
	0x23, 0x15, 0x05, 0x24, 0x34, 0x89, 0x4b, 0x54, 0x34, 0x55, 0xda, 0x50, 0x09, 0x12, 0xd7, 0xe1,
	0x34, 0xa6, 0x58, 0x34, 0x71, 0x48, 0xdc, 0x49, 0x7d, 0x13, 0x24, 0x9e, 0x84, 0x37, 0xe0, 0xc8,
	0x13, 0x44, 0xa8, 0xdc, 0x7a, 0xe4, 0x09, 0xd0, 0xec, 0xb9, 0x71, 0x06, 0xbd, 0xf9, 0xf7, 0x7d,
	0xbf, 0x7f, 0xb1, 0x15, 0x78, 0x34, 0xe7, 0x53, 0x22, 0x18, 0xcf, 0x06, 0x79, 0xc1, 0x05, 0x1f,
	0x68, 0x18, 0x48, 0x88, 0x77, 0x34, 0x76, 0x9e, 0xcc, 0x98, 0xf8, 0xb4, 0x88, 0x83, 0x29, 0x4f,
	0x07, 0x33, 0x3e, 0xe3, 0x8a, 0x1f, 0x2f, 0x3e, 0x4a, 0xa4, 0xc4, 0x57, 0x27, 0x25, 0xf4, 0xbf,
	0xb5, 0xe0, 0xe0, 0xec, 0x5a, 0x3b, 0xa2, 0x82, 0xb0, 0x39, 0x8e, 0xc0, 0xd2, 0x6e, 0x17, 0x2c,
	0xb1, 0x51, 0x0f, 0xf5, 0x3b, 0xe1, 0xd3, 0x75, 0xe5, 0x1d, 0x19, 0xe3, 0x63, 0x9e, 0x32, 0x41,
	0xd3, 0x5c, 0x2c, 0xff, 0x54, 0xde, 0x61, 0x5c, 0xf2, 0xec, 0xc4, 0xbf, 0x60, 0x89, 0x5f, 0xcf,
	0x23, 0xd0, 0xf4, 0x71, 0x82, 0x63, 0xd8, 0xdf, 0x88, 0x33, 0x92, 0x52, 0xbb, 0xd5, 0x43, 0xfd,
	0xdd, 0xf0, 0xd5, 0xba, 0xf2, 0x1e, 0x34, 0x16, 0x0d, 0x5f, 0x57, 0xf9, 0xf2, 0x82, 0xcd, 0x58,
	0x46, 0xe6, 0x92, 0x60, 0x26, 0xec, 0x69, 0xe9, 0x1b, 0x92, 0x52, 0xfc, 0x16, 0x76, 0x26, 0xa4,
	0xa0, 0x99, 0x18, 0x8f, 0xec, 0xb6, 0x2c, 0xfd, 0x62, 0x5d, 0x79, 0xf7, 0x72, 0x39, 0xbb, 0x59,
	0xd9, 0x51, 0xd6, 0x9b, 0xa5, 0x69, 0xbb, 0xb1, 0xf1, 0x3f, 0xc0, 0xde, 0x19, 0x2b, 0x85, 0xbe,
	0x20, 0x3c, 0x69, 0x62, 0x1b, 0xf5, 0xda, 0x7d, 0x6b, 0x68, 0x07, 0x9b, 0xd7, 0x68, 0x5e, 0x65,
	0x88, 0xd7, 0x95, 0x77, 0x90, 0x10, 0x41, 0xcc, 0xd2, 0xa6, 0x83, 0xff, 0x1d, 0x41, 0x57, 0x83,
	0x70, 0xa9, 0x82, 0xf1, 0x39, 0x58, 0x7a, 0x76, 0x4e, 0xf2, 0xeb, 0x94, 0xc7, 0xff, 0xa6, 0x68,
	0x41, 0x60, 0xb0, 0x5f, 0x67, 0xa2, 0x58, 0x46, 0xa6, 0xde, 0x79, 0x5f, 0x47, 0x68, 0x02, 0xee,
	0x42, 0xfb, 0x33, 0x5d, 0xaa, 0xc7, 0x8d, 0xae, 0x8e, 0xf8, 0x18, 0x3a, 0x97, 0x64, 0xbe, 0x50,
	0x4f, 0x63, 0x0d, 0xef, 0x1b, 0x71, 0x46, 0xe1, 0x48, 0x91, 0x4e, 0x5a, 0x2f, 0x91, 0xff, 0x1c,
	0x0e, 0x4f, 0xa9, 0xd0, 0x25, 0xc6, 0x49, 0x44, 0xbf, 0x2c, 0x68, 0x29, 0xf0, 0x43, 0xd8, 0xd5,
	0x37, 0x58, 0xca, 0xf2, 0x9d, 0xa8, 0x1e, 0xf8, 0xa7, 0x70, 0x74, 0x43, 0x55, 0xe6, 0x3c, 0x2b,
	0x29, 0x0e, 0xe0, 0xf6, 0x88, 0x08, 0x22, 0x3b, 0x59, 0x43, 0x67, 0xfb, 0xe7, 0x46, 0x92, 0x37,
	0x9c, 0xc2, 0x5d, 0xbd, 0x79, 0x47, 0x8b, 0x4b, 0x36, 0xa5, 0x78, 0x02, 0xfb, 0x0d, 0x6f, 0xec,
	0xd6, 0x2e, 0xff, 0xab, 0xea, 0x78, 0x5b, 0xf7, 0xaa, 0x54, 0xd8, 0xfd, 0xb1, 0x72, 0xd1, 0xcf,
	0x95, 0x8b, 0x7e, 0xad, 0x5c, 0xf4, 0xf5, 0xb7, 0x7b, 0x2b, 0xbe, 0x23, 0x7f, 0x9c, 0x67, 0x7f,
	0x03, 0x00, 0x00, 0xff, 0xff, 0xd5, 0x95, 0x23, 0x2f, 0x92, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LocationServiceClient is the client API for LocationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LocationServiceClient interface {
	GetByParentId(ctx context.Context, in *GetByParentIdRequest, opts ...grpc.CallOption) (*GetByParentIdResponse, error)
}

type locationServiceClient struct {
	cc *grpc.ClientConn
}

func NewLocationServiceClient(cc *grpc.ClientConn) LocationServiceClient {
	return &locationServiceClient{cc}
}

func (c *locationServiceClient) GetByParentId(ctx context.Context, in *GetByParentIdRequest, opts ...grpc.CallOption) (*GetByParentIdResponse, error) {
	out := new(GetByParentIdResponse)
	err := c.cc.Invoke(ctx, "/location.LocationService/GetByParentId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LocationServiceServer is the server API for LocationService service.
type LocationServiceServer interface {
	GetByParentId(context.Context, *GetByParentIdRequest) (*GetByParentIdResponse, error)
}

// UnimplementedLocationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLocationServiceServer struct {
}

func (*UnimplementedLocationServiceServer) GetByParentId(ctx context.Context, req *GetByParentIdRequest) (*GetByParentIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByParentId not implemented")
}

func RegisterLocationServiceServer(s *grpc.Server, srv LocationServiceServer) {
	s.RegisterService(&_LocationService_serviceDesc, srv)
}

func _LocationService_GetByParentId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByParentIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LocationServiceServer).GetByParentId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/location.LocationService/GetByParentId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LocationServiceServer).GetByParentId(ctx, req.(*GetByParentIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LocationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "location.LocationService",
	HandlerType: (*LocationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetByParentId",
			Handler:    _LocationService_GetByParentId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "location/proto/location.proto",
}

func (m *LocationDetail) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LocationDetail) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LocationDetail) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ParentID != 0 {
		i = encodeVarintLocation(dAtA, i, uint64(m.ParentID))
		i--
		dAtA[i] = 0x18
	}
	if len(m.LocationName) > 0 {
		i -= len(m.LocationName)
		copy(dAtA[i:], m.LocationName)
		i = encodeVarintLocation(dAtA, i, uint64(len(m.LocationName)))
		i--
		dAtA[i] = 0x12
	}
	if m.LocationId != 0 {
		i = encodeVarintLocation(dAtA, i, uint64(m.LocationId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ListLocation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListLocation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListLocation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ListLocation) > 0 {
		for iNdEx := len(m.ListLocation) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ListLocation[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintLocation(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *LocationByParent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LocationByParent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LocationByParent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LocationMap) > 0 {
		for k := range m.LocationMap {
			v := m.LocationMap[k]
			baseI := i
			if v != nil {
				{
					size, err := v.MarshalToSizedBuffer(dAtA[:i])
					if err != nil {
						return 0, err
					}
					i -= size
					i = encodeVarintLocation(dAtA, i, uint64(size))
				}
				i--
				dAtA[i] = 0x12
			}
			i = encodeVarintLocation(dAtA, i, uint64(k))
			i--
			dAtA[i] = 0x8
			i = encodeVarintLocation(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GetByParentIdRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetByParentIdRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetByParentIdRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ParentIDs) > 0 {
		dAtA3 := make([]byte, len(m.ParentIDs)*10)
		var j2 int
		for _, num1 := range m.ParentIDs {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA3[j2] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j2++
			}
			dAtA3[j2] = uint8(num)
			j2++
		}
		i -= j2
		copy(dAtA[i:], dAtA3[:j2])
		i = encodeVarintLocation(dAtA, i, uint64(j2))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetByParentIdResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetByParentIdResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetByParentIdResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Data != nil {
		{
			size, err := m.Data.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintLocation(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintLocation(dAtA []byte, offset int, v uint64) int {
	offset -= sovLocation(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *LocationDetail) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LocationId != 0 {
		n += 1 + sovLocation(uint64(m.LocationId))
	}
	l = len(m.LocationName)
	if l > 0 {
		n += 1 + l + sovLocation(uint64(l))
	}
	if m.ParentID != 0 {
		n += 1 + sovLocation(uint64(m.ParentID))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListLocation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ListLocation) > 0 {
		for _, e := range m.ListLocation {
			l = e.Size()
			n += 1 + l + sovLocation(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LocationByParent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.LocationMap) > 0 {
		for k, v := range m.LocationMap {
			_ = k
			_ = v
			l = 0
			if v != nil {
				l = v.Size()
				l += 1 + sovLocation(uint64(l))
			}
			mapEntrySize := 1 + sovLocation(uint64(k)) + l
			n += mapEntrySize + 1 + sovLocation(uint64(mapEntrySize))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetByParentIdRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ParentIDs) > 0 {
		l = 0
		for _, e := range m.ParentIDs {
			l += sovLocation(uint64(e))
		}
		n += 1 + sovLocation(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetByParentIdResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovLocation(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovLocation(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozLocation(x uint64) (n int) {
	return sovLocation(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *LocationDetail) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLocation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LocationDetail: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LocationDetail: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocationId", wireType)
			}
			m.LocationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LocationId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocationName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLocation
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLocation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocationName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentID", wireType)
			}
			m.ParentID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ParentID |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipLocation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLocation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListLocation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLocation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListLocation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListLocation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListLocation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLocation
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLocation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ListLocation = append(m.ListLocation, &LocationDetail{})
			if err := m.ListLocation[len(m.ListLocation)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLocation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLocation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LocationByParent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLocation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LocationByParent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LocationByParent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocationMap", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLocation
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLocation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LocationMap == nil {
				m.LocationMap = make(map[int32]*ListLocation)
			}
			var mapkey int32
			var mapvalue *ListLocation
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowLocation
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowLocation
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapkey |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
				} else if fieldNum == 2 {
					var mapmsglen int
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowLocation
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						mapmsglen |= int(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					if mapmsglen < 0 {
						return ErrInvalidLengthLocation
					}
					postmsgIndex := iNdEx + mapmsglen
					if postmsgIndex < 0 {
						return ErrInvalidLengthLocation
					}
					if postmsgIndex > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = &ListLocation{}
					if err := mapvalue.Unmarshal(dAtA[iNdEx:postmsgIndex]); err != nil {
						return err
					}
					iNdEx = postmsgIndex
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipLocation(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthLocation
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.LocationMap[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLocation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLocation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetByParentIdRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLocation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetByParentIdRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetByParentIdRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowLocation
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ParentIDs = append(m.ParentIDs, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowLocation
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthLocation
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthLocation
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ParentIDs) == 0 {
					m.ParentIDs = make([]int32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowLocation
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ParentIDs = append(m.ParentIDs, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentIDs", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipLocation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLocation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetByParentIdResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLocation
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetByParentIdResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetByParentIdResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLocation
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLocation
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLocation
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &LocationByParent{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLocation(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthLocation
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipLocation(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowLocation
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLocation
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLocation
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthLocation
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupLocation
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthLocation
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthLocation        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowLocation          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupLocation = fmt.Errorf("proto: unexpected end of group")
)
